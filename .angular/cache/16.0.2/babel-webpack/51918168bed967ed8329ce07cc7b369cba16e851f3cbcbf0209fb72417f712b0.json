{"ast":null,"code":"import _asyncToGenerator from \"C:/wamp/www/rosario-snack/cliente/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { firstValueFrom } from 'rxjs';\nimport { GLOBAL } from './global';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// Decorador\nclass PersonaServices {\n  // constructor( private _httpClient: HttpClient ){\n  constructor(_http) {\n    this._http = _http;\n    this.url = GLOBAL.url;\n  }\n  guardarPersona(usuario_a_registrar) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let jsonUsuarioRegistro = JSON.stringify(usuario_a_registrar);\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json; charset=utf-8'\n        //'Content-Type': 'application/x-www-form-urlencoded'\n        //'autorizacion':'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2NDk2MGVkNWE4ZDA3OGY0NWY3YjAyNDAiLCJub21icmVfdXN1YXJpbyI6Ik1hbnVVc2VyIiwiZW1haWwiOiJtYW51cGVyZXpAZ21haWwuY29tIiwicm9sIjoiQ2xpZW50ZSIsImltYWdlbiI6Im51bGwiLCJpYXQiOjE2OTE1MzE2MDEsImV4cCI6MTY5NDEyMzYwMX0.i0fL37ACEC2I_oWrwPDGfXrHGK2eDCfnarXK17hAgmA',\n        //'Authorization': 'Bearer clave_secreta_trabajo_final'           \n      });\n\n      try {\n        // Devolvemos la petición AJAX            \n        const resp = yield firstValueFrom(yield _this._http.post(_this.url + 'guardar-persona', jsonUsuarioRegistro, {\n          headers: headers\n        }));\n        if (resp) {\n          return resp;\n        } else {\n          return new Error(\"Error al guardar la persona\");\n        }\n      } catch (error) {\n        // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\n        throw error.error.mensaje;\n      }\n    })();\n  }\n  obtenerPersona(_idPersona) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      debugger;\n      console.log(_idPersona);\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json; charset=utf-8',\n        //'Content-Type': 'application/x-www-form-urlencoded'\n        //'autorizacion':'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2NDk2MGVkNWE4ZDA3OGY0NWY3YjAyNDAiLCJub21icmVfdXN1YXJpbyI6Ik1hbnVVc2VyIiwiZW1haWwiOiJtYW51cGVyZXpAZ21haWwuY29tIiwicm9sIjoiQ2xpZW50ZSIsImltYWdlbiI6Im51bGwiLCJpYXQiOjE2OTE1MzE2MDEsImV4cCI6MTY5NDEyMzYwMX0.i0fL37ACEC2I_oWrwPDGfXrHGK2eDCfnarXK17hAgmA',\n        'Authorization': 'Bearer clave_secreta_trabajo_final'\n      });\n      try {\n        debugger;\n        // Devolvemos la petición AJAX            \n        const resp = yield firstValueFrom(_this2._http.get(_this2.url + 'obtener-persona/' + _idPersona, {\n          headers: headers\n        }));\n        if (resp) {\n          return resp;\n        } else {\n          return new Error(\"Error al obtener la persona\");\n        }\n      } catch (error) {\n        // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\n        throw error.error.mensaje;\n      }\n    })();\n  }\n}\nPersonaServices.ɵfac = function PersonaServices_Factory(t) {\n  return new (t || PersonaServices)(i0.ɵɵinject(i1.HttpClient));\n};\nPersonaServices.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PersonaServices,\n  factory: PersonaServices.ɵfac,\n  providedIn: 'root'\n});\nexport { PersonaServices };","map":{"version":3,"names":["firstValueFrom","GLOBAL","HttpHeaders","PersonaServices","constructor","_http","url","guardarPersona","usuario_a_registrar","_this","_asyncToGenerator","jsonUsuarioRegistro","JSON","stringify","headers","resp","post","Error","error","mensaje","obtenerPersona","_idPersona","_this2","console","log","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\wamp\\www\\rosario-snack\\cliente\\src\\app\\services\\persona.services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { firstValueFrom, identity } from 'rxjs';\r\n\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { GLOBAL } from './global';\r\nimport { Persona } from '../models/persona';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UsuarioPersona } from '../models/usuarioPersona';\r\n\r\n// Decorador\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class PersonaServices{\r\n\r\n    public url: string;\r\n    public identity:any;\r\n    public token:any;\r\n\r\n    // constructor( private _httpClient: HttpClient ){\r\n    constructor( private _http: HttpClient ){\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n    async guardarPersona(usuario_a_registrar: UsuarioPersona): Promise<any>{\r\n        \r\n        let jsonUsuarioRegistro = JSON.stringify(usuario_a_registrar); \r\n        \r\n        const headers = new HttpHeaders({\r\n            'Content-Type':'application/json; charset=utf-8'\r\n            //'Content-Type': 'application/x-www-form-urlencoded'\r\n            //'autorizacion':'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2NDk2MGVkNWE4ZDA3OGY0NWY3YjAyNDAiLCJub21icmVfdXN1YXJpbyI6Ik1hbnVVc2VyIiwiZW1haWwiOiJtYW51cGVyZXpAZ21haWwuY29tIiwicm9sIjoiQ2xpZW50ZSIsImltYWdlbiI6Im51bGwiLCJpYXQiOjE2OTE1MzE2MDEsImV4cCI6MTY5NDEyMzYwMX0.i0fL37ACEC2I_oWrwPDGfXrHGK2eDCfnarXK17hAgmA',\r\n            //'Authorization': 'Bearer clave_secreta_trabajo_final'           \r\n        });\r\n\r\n        try {\r\n            // Devolvemos la petición AJAX            \r\n            const resp = await firstValueFrom(await this._http.post( this.url + 'guardar-persona', jsonUsuarioRegistro, {headers: headers} ));     \r\n            \r\n            if(resp){\r\n                return resp;\r\n            }else{\r\n                return new Error(\"Error al guardar la persona\");\r\n            }            \r\n\r\n        } catch (error:any) {            \r\n            // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\r\n            throw error.error.mensaje;            \r\n        }         \r\n    } \r\n    \r\n    async obtenerPersona(_idPersona: any): Promise<any>{\r\n        \r\n        debugger;\r\n        console.log(_idPersona);\r\n        \r\n        const headers = new HttpHeaders({\r\n            'Content-Type':'application/json; charset=utf-8',\r\n            //'Content-Type': 'application/x-www-form-urlencoded'\r\n            //'autorizacion':'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2NDk2MGVkNWE4ZDA3OGY0NWY3YjAyNDAiLCJub21icmVfdXN1YXJpbyI6Ik1hbnVVc2VyIiwiZW1haWwiOiJtYW51cGVyZXpAZ21haWwuY29tIiwicm9sIjoiQ2xpZW50ZSIsImltYWdlbiI6Im51bGwiLCJpYXQiOjE2OTE1MzE2MDEsImV4cCI6MTY5NDEyMzYwMX0.i0fL37ACEC2I_oWrwPDGfXrHGK2eDCfnarXK17hAgmA',\r\n            'Authorization': 'Bearer clave_secreta_trabajo_final'           \r\n        });\r\n\r\n        try {\r\n            debugger;\r\n            // Devolvemos la petición AJAX            \r\n            const resp = await firstValueFrom(this._http.get(this.url + 'obtener-persona/' + _idPersona, { headers: headers }));     \r\n            \r\n            if(resp){\r\n                return resp;\r\n            }else{\r\n                return new Error(\"Error al obtener la persona\");\r\n            }            \r\n\r\n        } catch (error:any) {            \r\n            // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\r\n            throw error.error.mensaje;            \r\n        }      \r\n\r\n    }\r\n\r\n} "],"mappings":";AAGA,SAASA,cAAc,QAAkB,MAAM;AAG/C,SAASC,MAAM,QAAQ,UAAU;AAEjC,SAASC,WAAW,QAAQ,sBAAsB;;;AAGlD;AACA,MAGaC,eAAe;EAMxB;EACAC,YAAqBC,KAAiB;IAAjB,KAAAA,KAAK,GAALA,KAAK;IACtB,IAAI,CAACC,GAAG,GAAGL,MAAM,CAACK,GAAG;EACzB;EAEMC,cAAcA,CAACC,mBAAmC;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAEpD,IAAIC,mBAAmB,GAAGC,IAAI,CAACC,SAAS,CAACL,mBAAmB,CAAC;MAE7D,MAAMM,OAAO,GAAG,IAAIZ,WAAW,CAAC;QAC5B,cAAc,EAAC;QACf;QACA;QACA;OACH,CAAC;;MAEF,IAAI;QACA;QACA,MAAMa,IAAI,SAASf,cAAc,OAAOS,KAAI,CAACJ,KAAK,CAACW,IAAI,CAAEP,KAAI,CAACH,GAAG,GAAG,iBAAiB,EAAEK,mBAAmB,EAAE;UAACG,OAAO,EAAEA;QAAO,CAAC,CAAE,CAAC;QAEjI,IAAGC,IAAI,EAAC;UACJ,OAAOA,IAAI;SACd,MAAI;UACD,OAAO,IAAIE,KAAK,CAAC,6BAA6B,CAAC;;OAGtD,CAAC,OAAOC,KAAS,EAAE;QAChB;QACA,MAAMA,KAAK,CAACA,KAAK,CAACC,OAAO;;IAC5B;EACL;EAEMC,cAAcA,CAACC,UAAe;IAAA,IAAAC,MAAA;IAAA,OAAAZ,iBAAA;MAEhC;MACAa,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;MAEvB,MAAMP,OAAO,GAAG,IAAIZ,WAAW,CAAC;QAC5B,cAAc,EAAC,iCAAiC;QAChD;QACA;QACA,eAAe,EAAE;OACpB,CAAC;MAEF,IAAI;QACA;QACA;QACA,MAAMa,IAAI,SAASf,cAAc,CAACsB,MAAI,CAACjB,KAAK,CAACoB,GAAG,CAACH,MAAI,CAAChB,GAAG,GAAG,kBAAkB,GAAGe,UAAU,EAAE;UAAEP,OAAO,EAAEA;QAAO,CAAE,CAAC,CAAC;QAEnH,IAAGC,IAAI,EAAC;UACJ,OAAOA,IAAI;SACd,MAAI;UACD,OAAO,IAAIE,KAAK,CAAC,6BAA6B,CAAC;;OAGtD,CAAC,OAAOC,KAAS,EAAE;QAChB;QACA,MAAMA,KAAK,CAACA,KAAK,CAACC,OAAO;;IAC5B;EAEL;;AAlEShB,eAAe,C;mBAAfA,eAAe,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAf1B,eAAe,C;SAAfA,eAAe;EAAA2B,OAAA,EAAf3B,eAAe,CAAA4B,IAAA;EAAAC,UAAA,EAFZ;AAAM;SAET7B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}