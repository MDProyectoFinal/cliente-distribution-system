{"ast":null,"code":"import _asyncToGenerator from \"C:/wamp/www/rosario-snack/cliente/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { catchError, map } from 'rxjs/operators';\nimport { firstValueFrom } from 'rxjs';\nimport { HttpParams } from '@angular/common/http';\nimport { GLOBAL } from './global';\nimport { Usuario } from '../models/usuario';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// Decorador\nclass UsuarioServices {\n  // constructor( private _httpClient: HttpClient ){\n  constructor(_http) {\n    this._http = _http;\n    this.url = GLOBAL.url;\n  }\n  // *** LOGUEAR USUARIO ***\n  signUp(usuario_a_loguear, gethash = false) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        if (gethash) {\n          usuario_a_loguear.gethash = gethash;\n        }\n        // var email = usuario_a_loguear.email;\n        // var clave = usuario_a_loguear.clave;\n        let jsonUser = JSON.stringify(usuario_a_loguear);\n        // Como usamos Js en el servidor tambien, definimos asi el Content-Type\n        let headers = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer clave_secreta_trabajo_final'\n        });\n        // Devolvemos la petición AJAX\n        var resp = yield firstValueFrom(_this._http.post(_this.url + 'loguear-usuario', jsonUser, {\n          headers: headers\n        }).pipe(map(response => {\n          //console.log( {resp: response, message: \"Respuesta dentro del pipe.map...\"} );\n          return response;\n        }),\n        // Error arrojado desde el usuario.js. Clave incorrecta, usuario incorrecto, etc..\n        catchError(error => {\n          //console.log({error:error.error.message, message: \"No se encontró el usuario logueado\"});\n          // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\n          throw error.error.message;\n        })));\n        return resp;\n      } catch (error) {\n        // console.error('Ocurrió un error en el catch principal:', error);\n        throw error;\n      }\n    })();\n  }\n  registroUsuario(usuario_a_registrar) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      var usuarioP = new Usuario('', '', '', '', '', 'ROLE_USER', '', new Date(), new Date(), false);\n      // let jsonUsuarioRegistro = JSON.stringify(usuario_a_registrar); \n      // let params = jsonUsuarioRegistro;\n      const body = new HttpParams().set('_id', usuario_a_registrar._id).set('correo_electronico', usuario_a_registrar.correo_electronico).set('nombre_usuario', usuario_a_registrar.nombre_usuario).set('password', usuario_a_registrar.password).set('persona_id', usuario_a_registrar.persona._id).set('persona_apellido', usuario_a_registrar.persona.apellido).set('persona_direccion', usuario_a_registrar.persona.direccion).set('persona_fecha_nacimiento', usuario_a_registrar.persona.fecha_nacimiento).set('persona_telefono', usuario_a_registrar.persona.telefono);\n      console.log({\n        bodyPrueba: body,\n        message: \"Vemos el params\"\n      });\n      // Como usamos Js en el servidor tambien, definimos asi el Content-Type\n      // let headers = new HttpHeaders({\n      //     'Content-Type':'application/json',\n      //     'autorizacion':'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2NDk2MGVkNWE4ZDA3OGY0NWY3YjAyNDAiLCJub21icmVfdXN1YXJpbyI6Ik1hbnVVc2VyIiwiZW1haWwiOiJtYW51cGVyZXpAZ21haWwuY29tIiwicm9sIjoiQ2xpZW50ZSIsImltYWdlbiI6Im51bGwiLCJpYXQiOjE2OTE1MzE2MDEsImV4cCI6MTY5NDEyMzYwMX0.i0fL37ACEC2I_oWrwPDGfXrHGK2eDCfnarXK17hAgmA',\n      //     'Authorization': 'Bearer clave_secreta_trabajo_final'\n      // });\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded'\n      });\n      console.log({\n        message: \"Antes del post de guardar-persona \"\n      });\n      try {\n        // Devolvemos la petición AJAX\n        var resp = yield _this2._http.post(_this2.url + 'guardar-persona', body.toString(), {\n          headers: headers\n        }).pipe(map(response => {\n          debugger;\n          console.log({\n            resp: response,\n            message: \"Respuesta dentro del pipe.map...\"\n          });\n          //return response;\n        }),\n        // Error arrojado desde el usuario.js. Clave incorrecta, usuario incorrecto, etc..\n        catchError(error => {\n          debugger;\n          console.log({\n            error: error.error.message,\n            message: \"No se encontró el usuario logueado\"\n          });\n          // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\n          throw error.error.message;\n        }));\n        // var resp = await this._http.get( this.url + 'probando-controlador', { headers: headers })  \n        //     .pipe(\n        //         map(response => {\n        //             debugger;\n        //             console.log( {resp: response, message: \"Respuesta dentro del pipe.map...\"} );\n        //             return response;\n        //         }),\n        //         // Error arrojado desde el usuario.js. Clave incorrecta, usuario incorrecto, etc..\n        //         catchError(error => { \n        //             debugger;\n        //             console.log({error:error.error.message, message: \"No se encontró el usuario logueado\"});\n        //             // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\n        //             throw error.error.message;\n        //         }));  \n        console.log({\n          message: \"No tira error?\",\n          respuesta: resp\n        });\n        return resp;\n      } catch (error) {\n        console.log({\n          error: error,\n          message: \"CATCH -No se encontró el usuario logueado\"\n        });\n        // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\n        throw error;\n      }\n    })();\n  }\n  getIdentity() {\n    let identity = localStorage.getItem('identity');\n    const identityString = identity ? JSON.stringify(identity) : '';\n    if (identityString != 'undefined' && identityString != '') {\n      this.identity = identityString;\n    } else {\n      this.identity = null;\n    }\n    return this.identity;\n  }\n  getToken() {\n    let token = localStorage.getItem('token');\n    const tokenString = token ? JSON.stringify(token) : '';\n    if (tokenString != 'undefined' && tokenString != '') {\n      this.token = tokenString;\n    } else {\n      this.token = null;\n    }\n    return this.token;\n  }\n}\nUsuarioServices.ɵfac = function UsuarioServices_Factory(t) {\n  return new (t || UsuarioServices)(i0.ɵɵinject(i1.HttpClient));\n};\nUsuarioServices.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsuarioServices,\n  factory: UsuarioServices.ɵfac,\n  providedIn: 'root'\n});\nexport { UsuarioServices };","map":{"version":3,"names":["catchError","map","firstValueFrom","HttpParams","GLOBAL","Usuario","HttpHeaders","UsuarioServices","constructor","_http","url","signUp","usuario_a_loguear","gethash","_this","_asyncToGenerator","jsonUser","JSON","stringify","headers","resp","post","pipe","response","error","message","registroUsuario","usuario_a_registrar","_this2","usuarioP","Date","body","set","_id","correo_electronico","nombre_usuario","password","persona","apellido","direccion","fecha_nacimiento","telefono","console","log","bodyPrueba","toString","respuesta","getIdentity","identity","localStorage","getItem","identityString","getToken","token","tokenString","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\wamp\\www\\rosario-snack\\cliente\\src\\app\\services\\usuario.services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { firstValueFrom, identity } from 'rxjs';\r\n\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { GLOBAL } from './global';\r\nimport { Usuario } from '../models/usuario';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UsuarioPersona } from '../models/usuarioPersona';\r\n\r\n// Decorador\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class UsuarioServices{\r\n\r\n    public url: string;\r\n    public identity:any;\r\n    public token:any;\r\n\r\n    // constructor( private _httpClient: HttpClient ){\r\n    constructor( private _http: HttpClient ){\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n    // *** LOGUEAR USUARIO ***\r\n    async signUp(usuario_a_loguear: Usuario, gethash = false){\r\n        \r\n        try {\r\n            if(gethash){\r\n                usuario_a_loguear.gethash = gethash; \r\n            }\r\n        \r\n            // var email = usuario_a_loguear.email;\r\n            // var clave = usuario_a_loguear.clave;\r\n    \r\n            let jsonUser = JSON.stringify(usuario_a_loguear);            \r\n    \r\n            // Como usamos Js en el servidor tambien, definimos asi el Content-Type\r\n            let headers = new HttpHeaders({\r\n                'Content-Type':'application/json',\r\n                'Authorization': 'Bearer clave_secreta_trabajo_final'\r\n            });\r\n                           \r\n            // Devolvemos la petición AJAX\r\n            var resp = await firstValueFrom(this._http.post( this.url + 'loguear-usuario', jsonUser, { headers: headers })            \r\n                .pipe(\r\n                    map(response => {\r\n                        //console.log( {resp: response, message: \"Respuesta dentro del pipe.map...\"} );\r\n                        return response;\r\n                    }),\r\n                    // Error arrojado desde el usuario.js. Clave incorrecta, usuario incorrecto, etc..\r\n                    catchError(error => { \r\n                        //console.log({error:error.error.message, message: \"No se encontró el usuario logueado\"});\r\n                        \r\n                        // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\r\n                        throw error.error.message;\r\n                    }))\r\n                );\r\n                        \r\n            return resp;\r\n                            \r\n        } catch (error) {\r\n            // console.error('Ocurrió un error en el catch principal:', error);\r\n            throw error\r\n        }\r\n    }\r\n\r\n    async registroUsuario(usuario_a_registrar: UsuarioPersona){\r\n        \r\n        var usuarioP = new Usuario('','','','','','ROLE_USER','', new Date, new Date, false); \r\n\r\n        // let jsonUsuarioRegistro = JSON.stringify(usuario_a_registrar); \r\n        // let params = jsonUsuarioRegistro;\r\n\r\n        const body = new HttpParams()\r\n            .set('_id', usuario_a_registrar._id)\r\n            .set('correo_electronico', usuario_a_registrar.correo_electronico)\r\n            .set('nombre_usuario', usuario_a_registrar.nombre_usuario)\r\n            .set('password', usuario_a_registrar.password)\r\n            .set('persona_id', usuario_a_registrar.persona._id)\r\n            .set('persona_apellido', usuario_a_registrar.persona.apellido)\r\n            .set('persona_direccion', usuario_a_registrar.persona.direccion)\r\n            .set('persona_fecha_nacimiento', usuario_a_registrar.persona.fecha_nacimiento)\r\n            .set('persona_telefono', usuario_a_registrar.persona.telefono)        \r\n\r\n        console.log({bodyPrueba: body, message: \"Vemos el params\"});\r\n\r\n        // Como usamos Js en el servidor tambien, definimos asi el Content-Type\r\n        // let headers = new HttpHeaders({\r\n        //     'Content-Type':'application/json',\r\n        //     'autorizacion':'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2NDk2MGVkNWE4ZDA3OGY0NWY3YjAyNDAiLCJub21icmVfdXN1YXJpbyI6Ik1hbnVVc2VyIiwiZW1haWwiOiJtYW51cGVyZXpAZ21haWwuY29tIiwicm9sIjoiQ2xpZW50ZSIsImltYWdlbiI6Im51bGwiLCJpYXQiOjE2OTE1MzE2MDEsImV4cCI6MTY5NDEyMzYwMX0.i0fL37ACEC2I_oWrwPDGfXrHGK2eDCfnarXK17hAgmA',\r\n        //     'Authorization': 'Bearer clave_secreta_trabajo_final'\r\n        // });\r\n\r\n        const headers = new HttpHeaders({\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        });\r\n\r\n        console.log({ message: \"Antes del post de guardar-persona \"});\r\n\r\n        try {\r\n            // Devolvemos la petición AJAX\r\n            var resp = await this._http.post( this.url + 'guardar-persona', body.toString(), {headers: headers} )  \r\n            .pipe(\r\n                map(response => {\r\n                    debugger;\r\n                    console.log( {resp: response, message: \"Respuesta dentro del pipe.map...\"} );\r\n                    //return response;\r\n                }),\r\n                // Error arrojado desde el usuario.js. Clave incorrecta, usuario incorrecto, etc..\r\n                catchError(error => { \r\n                    debugger;\r\n                    console.log({error:error.error.message, message: \"No se encontró el usuario logueado\"});\r\n                    \r\n                    // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\r\n                    throw error.error.message;\r\n                }));     \r\n            \r\n            // var resp = await this._http.get( this.url + 'probando-controlador', { headers: headers })  \r\n            //     .pipe(\r\n            //         map(response => {\r\n            //             debugger;\r\n            //             console.log( {resp: response, message: \"Respuesta dentro del pipe.map...\"} );\r\n            //             return response;\r\n            //         }),\r\n            //         // Error arrojado desde el usuario.js. Clave incorrecta, usuario incorrecto, etc..\r\n            //         catchError(error => { \r\n            //             debugger;\r\n            //             console.log({error:error.error.message, message: \"No se encontró el usuario logueado\"});\r\n                        \r\n            //             // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\r\n            //             throw error.error.message;\r\n            //         }));  \r\n\r\n            console.log({ message: \"No tira error?\", respuesta: resp });\r\n            return resp;\r\n\r\n        } catch (error) {\r\n            console.log({error:error, message: \"CATCH -No se encontró el usuario logueado\"});\r\n            \r\n            // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\r\n            throw error;\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    getIdentity(){        \r\n        let identity = localStorage.getItem('identity');\r\n        const identityString = identity ? JSON.stringify(identity) : '';\r\n\r\n        if(identityString != 'undefined' && identityString != ''){\r\n            this.identity = identityString;\r\n        }else{\r\n            this.identity = null;\r\n        }\r\n\r\n        return this.identity;\r\n    }\r\n\r\n    getToken(){\r\n        let token = localStorage.getItem('token');\r\n        const tokenString = token ? JSON.stringify(token) : '';\r\n\r\n        if(tokenString != 'undefined' && tokenString != ''){\r\n            this.token = tokenString;\r\n        }else{\r\n            this.token = null;\r\n        } \r\n\r\n        return this.token;\r\n    }\r\n    \r\n} \r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}