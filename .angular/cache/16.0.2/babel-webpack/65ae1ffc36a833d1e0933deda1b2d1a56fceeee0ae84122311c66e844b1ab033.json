{"ast":null,"code":"import _asyncToGenerator from \"C:/wamp/www/rosario-snack/cliente/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { catchError, map } from 'rxjs/operators';\nimport { firstValueFrom } from 'rxjs';\nimport { GLOBAL } from './global';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// Decorador\nclass UsuarioServices {\n  // constructor( private _httpClient: HttpClient ){\n  constructor(_http) {\n    this._http = _http;\n    this.url = GLOBAL.url;\n  }\n  // *** LOGUEAR USUARIO ***\n  signUp(usuario_a_loguear, gethash = false) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        if (gethash) {\n          usuario_a_loguear.gethash = gethash;\n        }\n        // var email = usuario_a_loguear.email;\n        // var clave = usuario_a_loguear.clave;\n        let jsonUser = JSON.stringify(usuario_a_loguear);\n        // Como usamos Js en el servidor tambien, definimos asi el Content-Type\n        let headers = new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer clave_secreta_trabajo_final'\n        });\n        // Devolvemos la petición AJAX\n        var resp = yield firstValueFrom(_this._http.post(_this.url + 'loguear-usuario', jsonUser, {\n          headers: headers\n        }).pipe(map(response => {\n          //console.log( {resp: response, message: \"Respuesta dentro del pipe.map...\"} );\n          return response;\n        }),\n        // Error arrojado desde el usuario.js. Clave incorrecta, usuario incorrecto, etc..\n        catchError(error => {\n          //console.log({error:error.error.message, message: \"No se encontró el usuario logueado\"});\n          // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\n          throw error.error.message;\n        })));\n        return resp;\n      } catch (error) {\n        // console.error('Ocurrió un error en el catch principal:', error);\n        throw error;\n      }\n    })();\n  }\n}\nUsuarioServices.ɵfac = function UsuarioServices_Factory(t) {\n  return new (t || UsuarioServices)(i0.ɵɵinject(i1.HttpClient));\n};\nUsuarioServices.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsuarioServices,\n  factory: UsuarioServices.ɵfac,\n  providedIn: 'root'\n});\nexport { UsuarioServices };","map":{"version":3,"names":["catchError","map","firstValueFrom","GLOBAL","HttpHeaders","UsuarioServices","constructor","_http","url","signUp","usuario_a_loguear","gethash","_this","_asyncToGenerator","jsonUser","JSON","stringify","headers","resp","post","pipe","response","error","message","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\wamp\\www\\rosario-snack\\cliente\\src\\app\\services\\usuario.services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GLOBAL } from './global';\r\nimport { Usuario } from '../models/usuario';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\n// Decorador\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class UsuarioServices{\r\n\r\n    public url: string;\r\n\r\n    // constructor( private _httpClient: HttpClient ){\r\n    constructor( private _http: HttpClient ){\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n    // *** LOGUEAR USUARIO ***\r\n    async signUp(usuario_a_loguear: Usuario, gethash = false){\r\n        \r\n        try {\r\n            if(gethash){\r\n                usuario_a_loguear.gethash = gethash; \r\n            }\r\n        \r\n            // var email = usuario_a_loguear.email;\r\n            // var clave = usuario_a_loguear.clave;\r\n    \r\n            let jsonUser = JSON.stringify(usuario_a_loguear);            \r\n    \r\n            // Como usamos Js en el servidor tambien, definimos asi el Content-Type\r\n            let headers = new HttpHeaders({\r\n                'Content-Type':'application/json',\r\n                'Authorization': 'Bearer clave_secreta_trabajo_final'\r\n            });\r\n                           \r\n            // Devolvemos la petición AJAX\r\n            var resp = await firstValueFrom(this._http.post( this.url + 'loguear-usuario', jsonUser, { headers: headers })            \r\n                .pipe(\r\n                    map(response => {\r\n                        //console.log( {resp: response, message: \"Respuesta dentro del pipe.map...\"} );\r\n                        return response;\r\n                    }),\r\n                    // Error arrojado desde el usuario.js. Clave incorrecta, usuario incorrecto, etc..\r\n                    catchError(error => { \r\n                        //console.log({error:error.error.message, message: \"No se encontró el usuario logueado\"});\r\n                        \r\n                        // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\r\n                        throw error.error.message;\r\n                    }))\r\n                );\r\n                        \r\n            return resp;\r\n                            \r\n        } catch (error) {\r\n            // console.error('Ocurrió un error en el catch principal:', error);\r\n            throw error\r\n        }\r\n    }\r\n    \r\n} \r\n\r\n"],"mappings":";AAEA,SAASA,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;AAChD,SAASC,cAAc,QAAQ,MAAM;AAGrC,SAASC,MAAM,QAAQ,UAAU;AAEjC,SAASC,WAAW,QAAQ,sBAAsB;;;AAElD;AACA,MAGaC,eAAe;EAIxB;EACAC,YAAqBC,KAAiB;IAAjB,KAAAA,KAAK,GAALA,KAAK;IACtB,IAAI,CAACC,GAAG,GAAGL,MAAM,CAACK,GAAG;EACzB;EAEA;EACMC,MAAMA,CAACC,iBAA0B,EAAEC,OAAO,GAAG,KAAK;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAEpD,IAAI;QACA,IAAGF,OAAO,EAAC;UACPD,iBAAiB,CAACC,OAAO,GAAGA,OAAO;;QAGvC;QACA;QAEA,IAAIG,QAAQ,GAAGC,IAAI,CAACC,SAAS,CAACN,iBAAiB,CAAC;QAEhD;QACA,IAAIO,OAAO,GAAG,IAAIb,WAAW,CAAC;UAC1B,cAAc,EAAC,kBAAkB;UACjC,eAAe,EAAE;SACpB,CAAC;QAEF;QACA,IAAIc,IAAI,SAAShB,cAAc,CAACU,KAAI,CAACL,KAAK,CAACY,IAAI,CAAEP,KAAI,CAACJ,GAAG,GAAG,iBAAiB,EAAEM,QAAQ,EAAE;UAAEG,OAAO,EAAEA;QAAO,CAAE,CAAC,CACzGG,IAAI,CACDnB,GAAG,CAACoB,QAAQ,IAAG;UACX;UACA,OAAOA,QAAQ;QACnB,CAAC,CAAC;QACF;QACArB,UAAU,CAACsB,KAAK,IAAG;UACf;UAEA;UACA,MAAMA,KAAK,CAACA,KAAK,CAACC,OAAO;QAC7B,CAAC,CAAC,CAAC,CACN;QAEL,OAAOL,IAAI;OAEd,CAAC,OAAOI,KAAK,EAAE;QACZ;QACA,MAAMA,KAAK;;IACd;EACL;;AAlDSjB,eAAe,C;mBAAfA,eAAe,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAftB,eAAe,C;SAAfA,eAAe;EAAAuB,OAAA,EAAfvB,eAAe,CAAAwB,IAAA;EAAAC,UAAA,EAFZ;AAAM;SAETzB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}