{"ast":null,"code":"import _asyncToGenerator from \"C:/wamp/www/rosario-snack/cliente/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { catchError, map } from 'rxjs/operators';\nimport { GLOBAL } from './global';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// Decorador\nclass PersonaServices {\n  // constructor( private _httpClient: HttpClient ){\n  constructor(_http) {\n    this._http = _http;\n    this.url = GLOBAL.url;\n  }\n  guardarPersona(usuario_a_registrar) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let jsonUsuarioRegistro = JSON.stringify(usuario_a_registrar);\n      let params = jsonUsuarioRegistro;\n      // Forma 2\n      // var usuarioPr = new Persona('','','','','','');  \n      // let jsonUsuarioRegistro = JSON.stringify(usuarioPr); \n      // let params = jsonUsuarioRegistro;\n      // FORMA 3\n      // const body = new HttpParams()\n      //     .set('email', usuario_a_registrar.correo_electronico)\n      //     .set('nombre_usuario', usuario_a_registrar.nombre_usuario)\n      //     .set('clave', usuario_a_registrar.password)\n      //     .set('nombre', usuario_a_registrar.persona.nombre)\n      //     .set('apellido', usuario_a_registrar.persona.apellido)\n      //     .set('direccion', usuario_a_registrar.persona.direccion)\n      //     .set('fecha_nacimiento', usuario_a_registrar.persona.fecha_nacimiento)\n      //     .set('telefono', usuario_a_registrar.persona.telefono)       \n      //     .set('rol', usuario_a_registrar.rol)      \n      // console.log({bodyPrueba: body, message: \"Vemos el params\"});\n      console.log({\n        paramsPrueba: params,\n        message: \"Vemos el params\"\n      });\n      // Como usamos Js en el servidor tambien, definimos asi el Content-Type\n      // let headers = new HttpHeaders({\n      //     'Content-Type':'application/json',\n      //     'autorizacion':'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2NDk2MGVkNWE4ZDA3OGY0NWY3YjAyNDAiLCJub21icmVfdXN1YXJpbyI6Ik1hbnVVc2VyIiwiZW1haWwiOiJtYW51cGVyZXpAZ21haWwuY29tIiwicm9sIjoiQ2xpZW50ZSIsImltYWdlbiI6Im51bGwiLCJpYXQiOjE2OTE1MzE2MDEsImV4cCI6MTY5NDEyMzYwMX0.i0fL37ACEC2I_oWrwPDGfXrHGK2eDCfnarXK17hAgmA',\n      //     'Authorization': 'Bearer clave_secreta_trabajo_final'\n      // });\n      // const headers = new HttpHeaders({\n      //     'Content-Type': 'application/x-www-form-urlencoded'\n      // });\n      let headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n        //'Authorization': 'Bearer clave_secreta_trabajo_final'\n      });\n\n      console.log({\n        message: \"Antes del post de guardar-persona \"\n      });\n      debugger;\n      try {\n        // Devolvemos la petición AJAX\n        const resp = yield _this._http.post(_this.url + 'guardar-persona', params, {\n          headers: headers\n        }).pipe(map(response => {\n          debugger;\n          console.log({\n            resp: response,\n            message: \"Respuesta dentro del pipe.map...\"\n          });\n          //return response;\n        }),\n        // Error arrojado desde el usuario.js. Clave incorrecta, usuario incorrecto, etc..\n        catchError(error => {\n          debugger;\n          console.log({\n            error: error.error.message,\n            message: \"No se encontró el usuario logueado\"\n          });\n          // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\n          throw error.error.message;\n        }));\n        // var resp = await this._http.get( this.url + 'probando-controlador', { headers: headers })  \n        //     .pipe(\n        //         map(response => {\n        //             debugger;\n        //             console.log( {resp: response, message: \"Respuesta dentro del pipe.map...\"} );\n        //             return response;\n        //         }),\n        //         // Error arrojado desde el usuario.js. Clave incorrecta, usuario incorrecto, etc..\n        //         catchError(error => { \n        //             debugger;\n        //             console.log({error:error.error.message, message: \"No se encontró el usuario logueado\"});\n        //             // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\n        //             throw error.error.message;\n        //         }));  \n        console.log({\n          message: \"No tira error?\",\n          respuesta: resp\n        });\n        return resp;\n      } catch (error) {\n        console.log({\n          error: error,\n          message: \"CATCH -No se encontró el usuario logueado\"\n        });\n        // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\n        throw error;\n      }\n    })();\n  }\n}\nPersonaServices.ɵfac = function PersonaServices_Factory(t) {\n  return new (t || PersonaServices)(i0.ɵɵinject(i1.HttpClient));\n};\nPersonaServices.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PersonaServices,\n  factory: PersonaServices.ɵfac,\n  providedIn: 'root'\n});\nexport { PersonaServices };","map":{"version":3,"names":["catchError","map","GLOBAL","HttpHeaders","PersonaServices","constructor","_http","url","guardarPersona","usuario_a_registrar","_this","_asyncToGenerator","jsonUsuarioRegistro","JSON","stringify","params","console","log","paramsPrueba","message","headers","resp","post","pipe","response","error","respuesta","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\wamp\\www\\rosario-snack\\cliente\\src\\app\\services\\persona.services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { firstValueFrom, identity } from 'rxjs';\r\n\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { GLOBAL } from './global';\r\nimport { Persona } from '../models/persona';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UsuarioPersona } from '../models/usuarioPersona';\r\n\r\n// Decorador\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class PersonaServices{\r\n\r\n    public url: string;\r\n    public identity:any;\r\n    public token:any;\r\n\r\n    // constructor( private _httpClient: HttpClient ){\r\n    constructor( private _http: HttpClient ){\r\n        this.url = GLOBAL.url;\r\n    }\r\n\r\n    async guardarPersona(usuario_a_registrar: UsuarioPersona){\r\n        \r\n        let jsonUsuarioRegistro = JSON.stringify(usuario_a_registrar); \r\n        let params = jsonUsuarioRegistro;\r\n\r\n        // Forma 2\r\n        // var usuarioPr = new Persona('','','','','','');  \r\n        // let jsonUsuarioRegistro = JSON.stringify(usuarioPr); \r\n        // let params = jsonUsuarioRegistro;\r\n\r\n        // FORMA 3\r\n        // const body = new HttpParams()\r\n        //     .set('email', usuario_a_registrar.correo_electronico)\r\n        //     .set('nombre_usuario', usuario_a_registrar.nombre_usuario)\r\n        //     .set('clave', usuario_a_registrar.password)\r\n        //     .set('nombre', usuario_a_registrar.persona.nombre)\r\n        //     .set('apellido', usuario_a_registrar.persona.apellido)\r\n        //     .set('direccion', usuario_a_registrar.persona.direccion)\r\n        //     .set('fecha_nacimiento', usuario_a_registrar.persona.fecha_nacimiento)\r\n        //     .set('telefono', usuario_a_registrar.persona.telefono)       \r\n        //     .set('rol', usuario_a_registrar.rol)      \r\n\r\n        // console.log({bodyPrueba: body, message: \"Vemos el params\"});\r\n        console.log({paramsPrueba: params, message: \"Vemos el params\"});\r\n\r\n        // Como usamos Js en el servidor tambien, definimos asi el Content-Type\r\n        // let headers = new HttpHeaders({\r\n        //     'Content-Type':'application/json',\r\n        //     'autorizacion':'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2NDk2MGVkNWE4ZDA3OGY0NWY3YjAyNDAiLCJub21icmVfdXN1YXJpbyI6Ik1hbnVVc2VyIiwiZW1haWwiOiJtYW51cGVyZXpAZ21haWwuY29tIiwicm9sIjoiQ2xpZW50ZSIsImltYWdlbiI6Im51bGwiLCJpYXQiOjE2OTE1MzE2MDEsImV4cCI6MTY5NDEyMzYwMX0.i0fL37ACEC2I_oWrwPDGfXrHGK2eDCfnarXK17hAgmA',\r\n        //     'Authorization': 'Bearer clave_secreta_trabajo_final'\r\n        // });\r\n\r\n        // const headers = new HttpHeaders({\r\n        //     'Content-Type': 'application/x-www-form-urlencoded'\r\n        // });\r\n\r\n        let headers = new HttpHeaders({\r\n            'Content-Type':'application/json',\r\n            //'Authorization': 'Bearer clave_secreta_trabajo_final'\r\n        });\r\n\r\n        console.log({ message: \"Antes del post de guardar-persona \"});\r\n        debugger;\r\n        try {\r\n            // Devolvemos la petición AJAX\r\n            const resp = await this._http.post( this.url + 'guardar-persona', params, {headers: headers} )\r\n            .pipe(                \r\n                map(response => {\r\n                    debugger;\r\n                    console.log( {resp: response, message: \"Respuesta dentro del pipe.map...\"} );\r\n                    //return response;\r\n                }),\r\n                // Error arrojado desde el usuario.js. Clave incorrecta, usuario incorrecto, etc..\r\n                catchError(error => { \r\n                    debugger;\r\n                    console.log({error:error.error.message, message: \"No se encontró el usuario logueado\"});\r\n                    \r\n                    // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\r\n                    throw error.error.message;\r\n                }));     \r\n            \r\n            // var resp = await this._http.get( this.url + 'probando-controlador', { headers: headers })  \r\n            //     .pipe(\r\n            //         map(response => {\r\n            //             debugger;\r\n            //             console.log( {resp: response, message: \"Respuesta dentro del pipe.map...\"} );\r\n            //             return response;\r\n            //         }),\r\n            //         // Error arrojado desde el usuario.js. Clave incorrecta, usuario incorrecto, etc..\r\n            //         catchError(error => { \r\n            //             debugger;\r\n            //             console.log({error:error.error.message, message: \"No se encontró el usuario logueado\"});\r\n                        \r\n            //             // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\r\n            //             throw error.error.message;\r\n            //         }));  \r\n\r\n            console.log({ message: \"No tira error?\", respuesta: resp });\r\n            return resp;\r\n\r\n        } catch (error) {\r\n            console.log({error:error, message: \"CATCH -No se encontró el usuario logueado\"});\r\n            \r\n            // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\r\n            throw error;\r\n        }\r\n        \r\n\r\n    }    \r\n} "],"mappings":";AAEA,SAASA,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;AAIhD,SAASC,MAAM,QAAQ,UAAU;AAEjC,SAASC,WAAW,QAAQ,sBAAsB;;;AAGlD;AACA,MAGaC,eAAe;EAMxB;EACAC,YAAqBC,KAAiB;IAAjB,KAAAA,KAAK,GAALA,KAAK;IACtB,IAAI,CAACC,GAAG,GAAGL,MAAM,CAACK,GAAG;EACzB;EAEMC,cAAcA,CAACC,mBAAmC;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAEpD,IAAIC,mBAAmB,GAAGC,IAAI,CAACC,SAAS,CAACL,mBAAmB,CAAC;MAC7D,IAAIM,MAAM,GAAGH,mBAAmB;MAEhC;MACA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACAI,OAAO,CAACC,GAAG,CAAC;QAACC,YAAY,EAAEH,MAAM;QAAEI,OAAO,EAAE;MAAiB,CAAC,CAAC;MAE/D;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MAEA,IAAIC,OAAO,GAAG,IAAIjB,WAAW,CAAC;QAC1B,cAAc,EAAC;QACf;OACH,CAAC;;MAEFa,OAAO,CAACC,GAAG,CAAC;QAAEE,OAAO,EAAE;MAAoC,CAAC,CAAC;MAC7D;MACA,IAAI;QACA;QACA,MAAME,IAAI,SAASX,KAAI,CAACJ,KAAK,CAACgB,IAAI,CAAEZ,KAAI,CAACH,GAAG,GAAG,iBAAiB,EAAEQ,MAAM,EAAE;UAACK,OAAO,EAAEA;QAAO,CAAC,CAAE,CAC7FG,IAAI,CACDtB,GAAG,CAACuB,QAAQ,IAAG;UACX;UACAR,OAAO,CAACC,GAAG,CAAE;YAACI,IAAI,EAAEG,QAAQ;YAAEL,OAAO,EAAE;UAAkC,CAAC,CAAE;UAC5E;QACJ,CAAC,CAAC;QACF;QACAnB,UAAU,CAACyB,KAAK,IAAG;UACf;UACAT,OAAO,CAACC,GAAG,CAAC;YAACQ,KAAK,EAACA,KAAK,CAACA,KAAK,CAACN,OAAO;YAAEA,OAAO,EAAE;UAAoC,CAAC,CAAC;UAEvF;UACA,MAAMM,KAAK,CAACA,KAAK,CAACN,OAAO;QAC7B,CAAC,CAAC,CAAC;QAEP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAEA;QACA;QACA;QAEAH,OAAO,CAACC,GAAG,CAAC;UAAEE,OAAO,EAAE,gBAAgB;UAAEO,SAAS,EAAEL;QAAI,CAAE,CAAC;QAC3D,OAAOA,IAAI;OAEd,CAAC,OAAOI,KAAK,EAAE;QACZT,OAAO,CAACC,GAAG,CAAC;UAACQ,KAAK,EAACA,KAAK;UAAEN,OAAO,EAAE;QAA2C,CAAC,CAAC;QAEhF;QACA,MAAMM,KAAK;;IACd;EAGL;;AAnGSrB,eAAe,C;mBAAfA,eAAe,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAf1B,eAAe,C;SAAfA,eAAe;EAAA2B,OAAA,EAAf3B,eAAe,CAAA4B,IAAA;EAAAC,UAAA,EAFZ;AAAM;SAET7B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}