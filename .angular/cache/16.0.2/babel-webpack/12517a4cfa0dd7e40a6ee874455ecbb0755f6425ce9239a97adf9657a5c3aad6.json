{"ast":null,"code":"import _asyncToGenerator from \"C:/wamp/www/rosario-snack/cliente/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { firstValueFrom } from 'rxjs';\nimport { GLOBAL } from './global';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// Decorador\nlet PersonaServices = /*#__PURE__*/(() => {\n  class PersonaServices {\n    // constructor( private _httpClient: HttpClient ){\n    constructor(_http) {\n      this._http = _http;\n      this.url = GLOBAL.url;\n    }\n    guardarPersona(usuario_a_registrar) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        let jsonUsuarioRegistro = JSON.stringify(usuario_a_registrar);\n        const headers = new HttpHeaders({\n          'Content-Type': 'application/json; charset=utf-8'\n          //'Content-Type': 'application/x-www-form-urlencoded'\n          //'autorizacion':'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2NDk2MGVkNWE4ZDA3OGY0NWY3YjAyNDAiLCJub21icmVfdXN1YXJpbyI6Ik1hbnVVc2VyIiwiZW1haWwiOiJtYW51cGVyZXpAZ21haWwuY29tIiwicm9sIjoiQ2xpZW50ZSIsImltYWdlbiI6Im51bGwiLCJpYXQiOjE2OTE1MzE2MDEsImV4cCI6MTY5NDEyMzYwMX0.i0fL37ACEC2I_oWrwPDGfXrHGK2eDCfnarXK17hAgmA',\n          //'Authorization': 'Bearer clave_secreta_trabajo_final'           \n        });\n\n        try {\n          // Devolvemos la petición AJAX            \n          const resp = yield firstValueFrom(yield _this._http.post(_this.url + 'guardar-persona', jsonUsuarioRegistro, {\n            headers: headers\n          }));\n          if (resp) {\n            return resp;\n          } else {\n            return new Error(\"Error al guardar la persona\");\n          }\n        } catch (error) {\n          // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\n          throw error.error.mensaje;\n        }\n      })();\n    }\n    obtenerPersona(_idPersona, _token) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        _this2.token = _token;\n        console.log(_idPersona);\n        console.log(_this2.token);\n        const headers = new HttpHeaders({\n          //'Content-Type':'application/json; charset=utf-8',\n          //'Content-Type': 'application/x-www-form-urlencoded'\n          //'autorizacion':'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2NDk2MGVkNWE4ZDA3OGY0NWY3YjAyNDAiLCJub21icmVfdXN1YXJpbyI6Ik1hbnVVc2VyIiwiZW1haWwiOiJtYW51cGVyZXpAZ21haWwuY29tIiwicm9sIjoiQ2xpZW50ZSIsImltYWdlbiI6Im51bGwiLCJpYXQiOjE2OTE1MzE2MDEsImV4cCI6MTY5NDEyMzYwMX0.i0fL37ACEC2I_oWrwPDGfXrHGK2eDCfnarXK17hAgmA',\n          'authorization': _this2.token\n          //'authorization': 'Bearer clave_secreta_trabajo_final',\n        });\n\n        const opciones = {\n          headers: headers\n        };\n        try {\n          // Devolvemos la petición AJAX            \n          const resp = yield firstValueFrom(_this2._http.get(_this2.url + 'obtener-persona/' + _idPersona, opciones));\n          if (resp) {\n            return resp;\n          } else {\n            return new Error(\"Error al obtener la persona\");\n          }\n        } catch (error) {\n          // Puedo definir si solo mando eso, o el status y mas info o solo el \"error\"\n          throw error.error.mensaje;\n        }\n      })();\n    }\n  }\n  PersonaServices.ɵfac = function PersonaServices_Factory(t) {\n    return new (t || PersonaServices)(i0.ɵɵinject(i1.HttpClient));\n  };\n  PersonaServices.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PersonaServices,\n    factory: PersonaServices.ɵfac,\n    providedIn: 'root'\n  });\n  return PersonaServices;\n})();\nexport { PersonaServices };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}